# Detect shell
shell=""
if [ -n "$BASH_VERSION" ]; then
  _shell="bash"
elif [ -n "$ZSH_VERSION" ]; then
  _shell="zsh"
else
  echo "[prompt_ip] Unknown shell. Only Bash and Zsh are supported."
  return
fi
##echo "[prompt_ip] Detected shell: $_shell"

# Save original prompts once
if [ -z "$ORIGINAL_PS1" ]; then
  ORIGINAL_PS1="$PS1"
fi
if [ -z "$ORIGINAL_PROMPT" ]; then
  ORIGINAL_PROMPT="$PROMPT"
fi

# Function to get first non-loopback IPv4 address
get_ip() {
  if command -v ip >/dev/null 2>&1; then
    ip_addr=$(ip -o -4 addr show scope global up | awk '{print $4}' | cut -d/ -f1 | head -n 1)
    echo "$ip_addr"
  elif command -v ifconfig >/dev/null 2>&1; then
    ip_addr=$(ifconfig | awk '/inet / && $2 != "127.0.0.1" {print $2; exit}')
    echo "$ip_addr"
  else
    echo "no-ip"
  fi
}

# Function to update the prompt
update_prompt_with_ip() {
#  echo "[prompt_ip] Running update_prompt_with_ip()"
  ip=$(get_ip)
#  echo "[prompt_ip] Detected $ip"

  if [ "$_shell" = "bash" ]; then
    PS1="${ip} ${ORIGINAL_PS1}"
  elif [ "$_shell" = "zsh" ]; then
    PROMPT="${ip} ${ORIGINAL_PROMPT}"
  fi
}

# Set initial prompt immediately
update_prompt_with_ip

# Set hooks
if [ "$_shell" = "bash" ]; then
  PROMPT_COMMAND="update_prompt_with_ip"
#  echo "[prompt_ip] Set PROMPT_COMMAND for bash"
elif [ "$_shell" = "zsh" ]; then
  autoload -Uz add-zsh-hook
  add-zsh-hook precmd update_prompt_with_ip
#  echo "[prompt_ip] Added precmd hook for zsh"
fi

